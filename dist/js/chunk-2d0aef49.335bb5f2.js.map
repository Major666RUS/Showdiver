{"version":3,"sources":["webpack:///./src/views/Comments.vue?488e","webpack:///./src/views/Comments.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","staticRenderFns","script","component","Object","componentNormalizer","__webpack_exports__"],"mappings":"yHAAA,IAAAA,EAAA,WAA0B,IAAAC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,sBAAiC,CAAAN,EAAAO,GAAA,yyBAC3IC,EAAA,eCAAC,EAAA,GAKAC,EAAgBC,OAAAC,EAAA,KAAAD,CAChBF,EACEV,EACAS,GACF,EACA,KACA,KACA,MAIeK,EAAA,WAAAH","file":"js/chunk-2d0aef49.335bb5f2.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"comments container\"},[_vm._v(\"\\n  Ввиду того, что информацию о корабле показываю в модалке, то роутер как таковой не нужен, поэтому решил оставить вторую страницу\\n  для своих комментариев по этой работе. Касаемо Vuex'a - изначально делал несколько однофайловых компонентов (table, pagination),\\n  поэтому данные о кораблях хранил внутри Vuex, однако впоследствии найдя готовый компонент на Bootstrap Vue c уже имеющейся таблицей\\n  и паджинацией, решил хранить инфу о кораблях в экземпляре Table, используя Vuex только для истории просмотров, как было сказано,\\n  в задаче. Собственно, историю просмотров засунул под паджинацию, надеюсь, что большого это значения не имеет, все-таки дизайн\\n  и компоновка элементов на странице в задаче не оговаривались. Также для сборки использовал Vue-cli, в требованиях к задаче не указанный.\\n\")])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./Comments.vue?vue&type=template&id=738ef25e&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}